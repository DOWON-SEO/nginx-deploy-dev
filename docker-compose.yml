version: "3"
services:
    # Express 앱 서비스
    app:
        build:
            context: . # Dockerfile이 있는 디렉토리
        expose:
            - ${SERVER_PORT}
        env_file:
            - .env # .env 파일을 사용하여 환경 변수 설정
        networks:
            - appnet

    # Nginx 리버스 프록시 서비스
    nginx:
        image: nginx:latest
        entrypoint: ["/etc/nginx/conf/nginx.conf.generate.sh"]
        command: '/bin/sh -c "while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;""'
        ports:
            - "80:80" # HTTP
            - "443:443" # HTTPS
        env_file:
            - .env
        volumes:
            - ./nginx.conf.generate.sh:/etc/nginx/conf/nginx.conf.generate.sh
            - ./nginx.conf.template:/etc/nginx/conf/nginx.conf.template
            - ./data/certs/conf:/etc/letsencrypt
            - ./data/webroot:/var/www/certbot
        depends_on:
            - app
        networks:
            - appnet
    certbot:
        image: certbot/certbot
        volumes:
            - ./data/certs/conf:/etc/letsencrypt
            - ./data/webroot:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
    appnet:

volumes:
    certs:
    webroot:
